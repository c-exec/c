name: C-Exec Build & Release

on:
  push:
    tags:
      - 'v[0-9]+.*'

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  create_release:
    name: Set up release
    runs-on: ubuntu-latest
    
    outputs:
      upload_url: ${{ steps.create_release.outputs.upload_url }}
      
    steps:
      - name: Create release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: C, Release ${{ github.ref }}
          draft: false
          prerelease: false
          
  build:
    name: Build C
    needs: create_release
    # The type of runner that the job will run on
    runs-on: ${{ matrix.os }}
    
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            OUTPUT: c
          - os: windows-latest
            OUTPUT: c.exe

    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
      
      - name: Setup Nim environment
        uses: jiro4989/setup-nim-action@v1.1.4
      
      - name: Install Nim dependencies
        run: nimble -y install shlex regex

      - name: Compile c
        run: nim -d:release -d:version=${{ github.ref }} -d:ssl c c.nim
        
      - name: Upload release assets
        uses: actions/upload-release-asset@v1
        
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          
        with:
          upload_url: ${{ needs.create_release.outputs.upload_url }}
          asset_name: ${{ matrix.OUTPUT }}
          asset_path: ./${{ matrix.OUTPUT }}
          asset_content_type: application/octet-stream
